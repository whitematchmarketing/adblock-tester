{"version":3,"sources":["scripts/variables.ts","scripts/helpers.ts","scripts/index.ts"],"names":[],"mappings":"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","file":"scripts.7e5b505e.js","sourceRoot":"../src","sourcesContent":["export const CHECK_EVAL_ATTRIBUTE = \"data-check-eval\";\nexport const CHECK_SIZE_ATTRIBUTE = \"data-check-size\";\nexport const CHECK_LOADING_ATTRIBUTE = \"data-check-loading\";\nexport const CHECK_FETCH_ATTRIBUTE = \"data-check-fetch\";\nexport const CHECK_VAR_ATTRIBUTE = \"data-check-variables\";\nexport const ITEM_BLOCKED = \"data-blocked\";\nexport const ITEM_FINAL_BLOCKED = \"data-final-blocked\";\n\nexport const STATUS_LOADING_SUCCESS = \"success\";\nexport const STATUS_LOADING_FAILURE = \"failure\";\n\nexport const $finalScorePercent = document.querySelector(\n  \".js-final-score-percent\"\n);\nexport const $finalScoreSuccess = document.querySelector(\n  \".js-final-score-success\"\n);\nexport const $finalScoreCount = document.querySelector(\".js-final-score-count\");\n\nexport const $checkLoadings = [\n  ...document.querySelectorAll(`[${CHECK_LOADING_ATTRIBUTE}]`)\n];\nexport const $checkVars = [\n  ...document.querySelectorAll(`[${CHECK_VAR_ATTRIBUTE}]`)\n];\nexport const $checkSizes = [\n  ...document.querySelectorAll(`[${CHECK_SIZE_ATTRIBUTE}]`)\n];\nexport const $checkEvals = [\n  ...document.querySelectorAll(`[${CHECK_EVAL_ATTRIBUTE}]`)\n];\nexport const $checkFetchs = [\n  ...document.querySelectorAll(`[${CHECK_FETCH_ATTRIBUTE}]`)\n];\nexport const $itemResults = [...document.querySelectorAll(`[${ITEM_BLOCKED}]`)];\n","import { ITEM_BLOCKED } from \"./variables\";\n\nconst checkFlash = () => {\n  var flashAvailable = false;\n  try {\n    var flash = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n    if (flash) {\n      flashAvailable = true;\n    }\n  } catch (e) {\n    if (navigator.mimeTypes[\"application/x-shockwave-flash\"] != undefined) {\n      flashAvailable = true;\n    }\n  }\n  return flashAvailable;\n};\n\nexport const flashSupported = checkFlash();\n\nexport const extendAttribute = (\n  $el: Element,\n  attrName: string,\n  value: string | boolean\n) => {\n  const prevValue = $el.getAttribute(attrName);\n  const optionalSlash = prevValue ? \"/\" : \"\";\n  $el.setAttribute(attrName, prevValue + optionalSlash + value);\n};\n\nexport const updateResult = ($el: Element, blocked: boolean) => {\n  const $input = $el.closest(\"li\").querySelector(`[${ITEM_BLOCKED}]`);\n  extendAttribute($input, ITEM_BLOCKED, blocked);\n};\n\nexport function deepFind(path: string, obj: object = window) {\n  var paths = path.split(\".\"),\n    current = obj;\n\n  for (var i = 0; i < paths.length; ++i) {\n    if (current[paths[i]] == undefined) {\n      return undefined;\n    } else {\n      current = current[paths[i]];\n    }\n  }\n  return current;\n}\n","// and/or\n// check variable\n// block size\n// loading status cover\n\nimport {\n  CHECK_LOADING_ATTRIBUTE,\n  CHECK_VAR_ATTRIBUTE,\n  CHECK_EVAL_ATTRIBUTE,\n  ITEM_BLOCKED,\n  ITEM_FINAL_BLOCKED,\n  STATUS_LOADING_SUCCESS,\n  STATUS_LOADING_FAILURE,\n  $finalScorePercent,\n  $finalScoreSuccess,\n  $finalScoreCount,\n  $checkSizes,\n  $checkLoadings,\n  $checkVars,\n  $itemResults,\n  $checkEvals,\n  $checkFetchs,\n  CHECK_FETCH_ATTRIBUTE\n} from \"./variables\";\nimport {\n  updateResult,\n  deepFind,\n  extendAttribute,\n  flashSupported\n} from \"./helpers\";\n\nconst syncCheckSize = () => {\n  $checkSizes.forEach($block => {\n    let hasUnsupportedFlashItem = false;\n    // if (!flashSupported) {\n    //   const children = [...$block.children];\n    //   hasUnsupportedFlashItem = children.reduce((acc, child) => {\n    //     if (child.tagName === \"OBJECT\" || child.tagName === \"EMBED\") {\n    //       return true;\n    //     }\n    //     return acc;\n    //   }, false);\n    // }\n\n    const empty = $block.clientWidth === 0 || $block.clientHeight === 0;\n    $block.parentElement.setAttribute(\"data-size\", empty ? \"empty\" : \"full\");\n    // $block.parentElement.setAttribute(\n    //   \"data-unsupported-flash\",\n    //   hasUnsupportedFlashItem + \"\"\n    // );\n    updateResult($block, empty || hasUnsupportedFlashItem);\n  });\n};\n\nconst syncLoading = () => {\n  $checkLoadings.forEach($el => {\n    const result = $el.getAttribute(CHECK_LOADING_ATTRIBUTE);\n\n    if (result === \"\") {\n      extendAttribute($el, CHECK_LOADING_ATTRIBUTE, STATUS_LOADING_FAILURE);\n      updateResult($el, true);\n    } else {\n      result\n        .split(\"/\")\n        .forEach(res =>\n          updateResult($el, res === STATUS_LOADING_SUCCESS ? false : true)\n        );\n    }\n  });\n};\n\nconst syncVariables = () => {\n  $checkVars.forEach($el => {\n    const variables = $el.getAttribute(CHECK_VAR_ATTRIBUTE).split(\"/\");\n    const noVariable = variables.reduce((acc, variablePath) => {\n      if (deepFind(variablePath) === undefined) {\n        return true;\n      }\n      return acc;\n    }, false);\n    updateResult($el, noVariable);\n  });\n};\n\nconst syncEvals = () => {\n  $checkEvals.forEach($el => {\n    const evalString = $el.getAttribute(CHECK_EVAL_ATTRIBUTE);\n    const result = eval(evalString);\n    updateResult($el, result);\n  });\n};\n\nconst syncFetch = () => {\n  $checkFetchs.forEach(async $el => {\n    const url = $el.getAttribute(CHECK_FETCH_ATTRIBUTE);\n    try {\n      await fetch(url);\n      updateResult($el, false);\n    } catch (e) {\n      updateResult($el, true);\n    }\n  });\n};\n\nconst syncItemResults = () => {\n  $itemResults.forEach($itemResult => {\n    const results = $itemResult.getAttribute(ITEM_BLOCKED).split(\"/\");\n    const blocked = results\n      .map((item: string) => item === \"true\")\n      .reduce((acc, result) => (acc === false ? false : result));\n\n    const successText =\n      $itemResult.getAttribute(\"data-success-text\") || \"заблокирован\";\n    const failureText =\n      $itemResult.getAttribute(\"data-failute-text\") || \"загружен\";\n\n    $itemResult.setAttribute(ITEM_FINAL_BLOCKED, blocked + \"\");\n    $itemResult.textContent = blocked\n      ? `✅ ${successText}`\n      : `❌ ${failureText}`;\n    $itemResult.classList.remove(blocked ? \"red\" : \"green\");\n    $itemResult.classList.add(blocked ? \"green\" : \"red\");\n  });\n};\n\nconst syncFinalScore = () => {\n  var successCount = $itemResults.reduce((acc, $result) => {\n    const blockedAsNumber =\n      $result.getAttribute(ITEM_FINAL_BLOCKED) === \"true\" ? 1 : 0;\n    return acc + blockedAsNumber;\n  }, 0);\n\n  $finalScoreSuccess.textContent = \"\" + successCount;\n  $finalScoreCount.textContent = \"\" + $itemResults.length;\n  $finalScorePercent.textContent =\n    (successCount == 0\n      ? 0\n      : Math.round((successCount / $itemResults.length) * 10000) / 100) + \"% \";\n};\n\nconst clearResults = () =>\n  $itemResults.forEach($el => $el.setAttribute(ITEM_BLOCKED, \"\"));\n\nconst appCycle = async (delay: number) => {\n  await syncFetch();\n  clearResults();\n  syncCheckSize();\n  syncLoading();\n  syncVariables();\n  syncEvals();\n  syncItemResults();\n  syncFinalScore();\n\n  const newDelay = delay + delay * 0.5;\n  setTimeout(() => appCycle(newDelay), newDelay);\n};\n\nwindow.onload = () => appCycle(500);\n"]}