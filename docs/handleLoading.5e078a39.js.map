{"version":3,"sources":["scripts/variables.ts","scripts/helpers.ts","scripts/handleLoading.ts"],"names":[],"mappings":";AA8Ba,aAAA,IAAA,EAAA,MAAA,KAAA,gBAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA9BA,QAAA,qBAAuB,kBACvB,QAAA,qBAAuB,kBACvB,QAAA,wBAA0B,qBAC1B,QAAA,oBAAsB,uBACtB,QAAA,aAAe,eACf,QAAA,mBAAqB,qBAErB,QAAA,uBAAyB,UACzB,QAAA,uBAAyB,UAEzB,QAAA,mBAAqB,SAAS,cACzC,2BAEW,QAAA,mBAAqB,SAAS,cACzC,2BAEW,QAAA,iBAAmB,SAAS,cAAc,yBAE1C,QAAA,eAAc,EACtB,SAAS,iBAAiB,IAAI,QAAA,wBAAuB,MAE7C,QAAA,WAAU,EAClB,SAAS,iBAAiB,IAAI,QAAA,oBAAmB,MAEzC,QAAA,YAAW,EACnB,SAAS,iBAAiB,IAAI,QAAA,qBAAoB,MAE1C,QAAA,YAAW,EACnB,SAAS,iBAAiB,IAAI,QAAA,qBAAoB,MAE1C,QAAA,aAAY,EAAO,SAAS,iBAAiB,IAAI,QAAA,aAAY;;ACI1E,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlCA,IAAA,EAAA,QAAA,eAEM,EAAa,WACb,IAAA,GAAiB,EACjB,IACU,IAAI,cAAc,mCAE5B,GAAiB,GAEnB,MAAO,GACqD,MAAxD,UAAU,UAAU,mCACtB,GAAiB,GAGd,OAAA,GAoBT,SAAgB,EAAS,EAAc,QAAA,IAAA,IAAA,EAAA,QAIhC,IAHD,IAAA,EAAQ,EAAK,MAAM,KACrB,EAAU,EAEH,EAAI,EAAG,EAAI,EAAM,SAAU,EAAG,CACjC,GAAqB,MAArB,EAAQ,EAAM,IACT,OAEP,EAAU,EAAQ,EAAM,IAGrB,OAAA,EA5BI,QAAA,eAAiB,IAEjB,QAAA,gBAAkB,SAC7B,EACA,EACA,GAEM,IAAA,EAAY,EAAI,aAAa,GAC7B,EAAgB,EAAY,IAAM,GACxC,EAAI,aAAa,EAAU,EAAY,EAAgB,IAG5C,QAAA,aAAe,SAAC,EAAc,GACnC,IAAA,EAAS,EAAI,QAAQ,MAAM,cAAc,IAAI,EAAA,aAAY,KAC/D,QAAA,gBAAgB,EAAQ,EAAA,aAAc,IAGxC,QAAA,SAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlCA,IAAA,EAAA,QAAA,eAKA,EAAA,QAAA,aAYM,EAAgB,SAAC,GAAmB,OAAA,SAAC,GACnC,IAAA,EAAS,EACZ,QAAQ,MACR,cAAc,IAAI,EAAA,wBAAuB,KAEvC,EAKL,EAAA,gBAAgB,EAAQ,EAAA,wBAAyB,GAJ/C,QAAQ,KAAK,MAAM,EAAA,wBAAuB,aAAc,KAO5D,OAAO,QAAU,MAAM,QACvB,OAAO,eAAiB,EAAA,eACxB,OAAO,WAAa,EAAc,EAAA,wBAClC,OAAO,YAAc,EAAc,EAAA,wBACnC,OAAO,WAAa,SAAC,GAAgB,OAAA,EAAG,cAAc,YAAY","file":"handleLoading.5e078a39.js","sourceRoot":"../src","sourcesContent":["export const CHECK_EVAL_ATTRIBUTE = \"data-check-eval\";\nexport const CHECK_SIZE_ATTRIBUTE = \"data-check-size\";\nexport const CHECK_LOADING_ATTRIBUTE = \"data-check-loading\";\nexport const CHECK_VAR_ATTRIBUTE = \"data-check-variables\";\nexport const ITEM_BLOCKED = \"data-blocked\";\nexport const ITEM_FINAL_BLOCKED = \"data-final-blocked\";\n\nexport const STATUS_LOADING_SUCCESS = \"success\";\nexport const STATUS_LOADING_FAILURE = \"failure\";\n\nexport const $finalScorePercent = document.querySelector(\n  \".js-final-score-percent\"\n);\nexport const $finalScoreSuccess = document.querySelector(\n  \".js-final-score-success\"\n);\nexport const $finalScoreCount = document.querySelector(\".js-final-score-count\");\n\nexport const $checkLoadings = [\n  ...document.querySelectorAll(`[${CHECK_LOADING_ATTRIBUTE}]`)\n];\nexport const $checkVars = [\n  ...document.querySelectorAll(`[${CHECK_VAR_ATTRIBUTE}]`)\n];\nexport const $checkSizes = [\n  ...document.querySelectorAll(`[${CHECK_SIZE_ATTRIBUTE}]`)\n];\nexport const $checkEvals = [\n  ...document.querySelectorAll(`[${CHECK_EVAL_ATTRIBUTE}]`)\n];\nexport const $itemResults = [...document.querySelectorAll(`[${ITEM_BLOCKED}]`)];\n","import { ITEM_BLOCKED } from \"./variables\";\n\nconst checkFlash = () => {\n  var flashAvailable = false;\n  try {\n    var flash = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n    if (flash) {\n      flashAvailable = true;\n    }\n  } catch (e) {\n    if (navigator.mimeTypes[\"application/x-shockwave-flash\"] != undefined) {\n      flashAvailable = true;\n    }\n  }\n  return flashAvailable;\n};\n\nexport const flashSupported = checkFlash();\n\nexport const extendAttribute = (\n  $el: Element,\n  attrName: string,\n  value: string | boolean\n) => {\n  const prevValue = $el.getAttribute(attrName);\n  const optionalSlash = prevValue ? \"/\" : \"\";\n  $el.setAttribute(attrName, prevValue + optionalSlash + value);\n};\n\nexport const updateResult = ($el: Element, blocked: boolean) => {\n  const $input = $el.closest(\"li\").querySelector(`[${ITEM_BLOCKED}]`);\n  extendAttribute($input, ITEM_BLOCKED, blocked);\n};\n\nexport function deepFind(path: string, obj: object = window) {\n  var paths = path.split(\".\"),\n    current = obj;\n\n  for (var i = 0; i < paths.length; ++i) {\n    if (current[paths[i]] == undefined) {\n      return undefined;\n    } else {\n      current = current[paths[i]];\n    }\n  }\n  return current;\n}\n","import {\n  CHECK_LOADING_ATTRIBUTE,\n  STATUS_LOADING_SUCCESS,\n  STATUS_LOADING_FAILURE\n} from \"./variables\";\nimport { extendAttribute, flashSupported } from \"./helpers\";\n\ndeclare global {\n  interface Window {\n    handleLoad: Function;\n    handleError: Function;\n    imageError: Function;\n    isArray: Function;\n    flashSupported: boolean;\n  }\n}\n\nconst handleFactory = (result: string) => ($el: Element) => {\n  const $input = $el\n    .closest(\"li\")\n    .querySelector(`[${CHECK_LOADING_ATTRIBUTE}]`);\n\n  if (!$input) {\n    console.warn(`No ${CHECK_LOADING_ATTRIBUTE} in parent`, $el);\n    return;\n  }\n\n  extendAttribute($input, CHECK_LOADING_ATTRIBUTE, result);\n};\n\nwindow.isArray = Array.isArray;\nwindow.flashSupported = flashSupported;\nwindow.handleLoad = handleFactory(STATUS_LOADING_SUCCESS);\nwindow.handleError = handleFactory(STATUS_LOADING_FAILURE);\nwindow.imageError = (el: Element) => el.parentElement.removeChild(el);\n"]}