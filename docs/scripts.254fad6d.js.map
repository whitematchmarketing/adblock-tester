{"version":3,"sources":["scripts/variables.ts","scripts/helpers.ts","scripts/darkMode.ts","scripts/index.ts"],"names":[],"mappings":"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","file":"scripts.254fad6d.js","sourceRoot":"../src","sourcesContent":["export const CHECK_EVAL_ATTRIBUTE = \"data-check-eval\";\nexport const CHECK_SIZE_ATTRIBUTE = \"data-check-size\";\nexport const CHECK_SIZE_ID_ATTRIBUTE = \"data-check-size-id\";\nexport const SIZE_ID_ATTRIBUTE = \"data-size-id\";\nexport const CHECK_SCRIPT_LOADING_ATTRIBUTE = \"data-check-script-loading\";\nexport const CHECK_IMAGE_LOADING_ATTRIBUTE = \"data-check-image-loading\";\nexport const CHECK_SUCESS_ATTRIBUTE = \"data-check-success\";\nexport const CHECK_FAILURE_ATTRIBUTE = \"data-check-failure\";\nexport const LOADING_URL_ATTRIBUTE = \"data-loading-url\";\nexport const ITEMS_RESULS_ATTRIBUTE = \"data-result\";\n\nexport const STATUS_LOADING_SUCCESS = \"success\";\nexport const STATUS_LOADING_FAILURE = \"failure\";\n\nexport const $finalScorePercent = document.querySelector(\n  \".js-final-score-percent\"\n);\nexport const $finalScoreSuccess = document.querySelector(\n  \".js-final-score-success\"\n);\nexport const $finalScoreCount = document.querySelector(\".js-final-score-count\");\n\nexport const $checkScriptLoadings = [\n  ...document.querySelectorAll(`[${CHECK_SCRIPT_LOADING_ATTRIBUTE}]`)\n];\nexport const $checkImageLoadings = [\n  ...document.querySelectorAll(`[${CHECK_IMAGE_LOADING_ATTRIBUTE}]`)\n];\nexport const $checkSizes = [\n  ...document.querySelectorAll(`[${CHECK_SIZE_ATTRIBUTE}]`)\n];\nexport const $checkEvals = [\n  ...document.querySelectorAll(`[${CHECK_EVAL_ATTRIBUTE}]`)\n];\nexport const getAllResults = () => [\n  ...document.querySelectorAll(`[${ITEMS_RESULS_ATTRIBUTE}]`)\n];\n","export const checkFlash = () => {\n  var flashAvailable = false;\n  try {\n    var flash = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\n    if (flash) {\n      flashAvailable = true;\n    }\n  } catch (e) {\n    if (navigator.mimeTypes[\"application/x-shockwave-flash\"] != undefined) {\n      flashAvailable = true;\n    }\n  }\n  return flashAvailable;\n};\n\nexport const loadScript = (url: string) => {\n  if (!url) throw \"No url\";\n\n  return new Promise((res, rej) => {\n    const $firstScript = document.getElementsByTagName(\"script\")[0];\n    const $script = document.createElement(\"script\");\n    $script.src = url;\n    $script.async = true;\n    $firstScript.parentNode.insertBefore($script, $firstScript);\n    $script.onload = res;\n    $script.onerror = rej;\n  });\n};\n\nexport const loadImage = (url: string) => {\n  if (!url) throw \"No url\";\n\n  return new Promise((res, rej) => {\n    const $image = document.createElement(\"img\");\n    $image.hidden = true;\n    $image.src = url;\n    $image.onload = res;\n    $image.onerror = rej;\n    document.body.appendChild($image);\n  });\n};\n","type Theme = typeof DARK | typeof LIGHT;\n\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nconst $themeSwitcher = document.querySelector(\".js-theme-switcher\") as HTMLInputElement;\n\nconst applyTheme = (theme: Theme) => document.documentElement.setAttribute(\"color-scheme\", theme);\nconst saveTheme = (theme: Theme) => localStorage.setItem(\"color-scheme\", theme);\nconst isDarkTheme = (theme: Theme) => theme === DARK;\nconst getThemeFromBoolean = (isDark: boolean) => (isDark ? DARK : LIGHT);\nconst invertTheme = (theme: Theme) => (theme === DARK ? DARK : LIGHT);\nconst getActiveTheme = () => {\n  const savedScheme = localStorage.getItem(\"color-scheme\");\n  const mediaQueryScheme = matchMedia(\"(prefers-color-scheme: dark)\").matches ? DARK : LIGHT;\n  return savedScheme || mediaQueryScheme || DARK;\n};\n\nconst handleThemeChange = (event: InputEvent) => {\n  event.stopImmediatePropagation();\n  const target = event.target as HTMLInputElement;\n  const newValue = invertTheme(getThemeFromBoolean(target.checked));\n  saveTheme(newValue);\n  applyTheme(newValue);\n};\n\nconst syncThemeAndSwitcher = (theme: Theme) => ($themeSwitcher.checked = isDarkTheme(theme));\n\n(function init() {\n  const activeTheme = getActiveTheme();\n  syncThemeAndSwitcher(activeTheme);\n  applyTheme(activeTheme);\n\n  $themeSwitcher.addEventListener(\"change\", handleThemeChange, false);\n})();\n","import {\n  CHECK_SCRIPT_LOADING_ATTRIBUTE,\n  CHECK_EVAL_ATTRIBUTE,\n  CHECK_SIZE_ATTRIBUTE,\n  ITEMS_RESULS_ATTRIBUTE,\n  STATUS_LOADING_SUCCESS,\n  $finalScorePercent,\n  $finalScoreSuccess,\n  $finalScoreCount,\n  $checkSizes,\n  $checkEvals,\n  getAllResults,\n  LOADING_URL_ATTRIBUTE,\n  STATUS_LOADING_FAILURE,\n  CHECK_SUCESS_ATTRIBUTE,\n  CHECK_FAILURE_ATTRIBUTE,\n  CHECK_SIZE_ID_ATTRIBUTE,\n  SIZE_ID_ATTRIBUTE,\n  $checkScriptLoadings,\n  $checkImageLoadings,\n  CHECK_IMAGE_LOADING_ATTRIBUTE,\n} from \"./variables\";\nimport { loadScript, loadImage } from \"./helpers\";\nimport \"./darkMode\";\n\nconst makeResult = (\n  $item: Element,\n  blocked: boolean,\n  successText = \"\",\n  failureText = \"\",\n  additionalInfo = \"\",\n) => {\n  const newText = blocked ? `✅ ${successText}` : `❌ ${failureText}`;\n  $item.innerHTML = `<b>${newText}</b>`;\n  $item.classList.remove(blocked ? \"red\" : \"green\");\n  $item.classList.add(blocked ? \"green\" : \"red\");\n  $item.setAttribute(ITEMS_RESULS_ATTRIBUTE, blocked + \"\");\n  if (additionalInfo) {\n    $item.innerHTML += ` <small class=\"small\">${additionalInfo}</small>`;\n  }\n};\n\nconst syncCheckSize = () => {\n  $checkSizes.forEach($item => {\n    const sizeId = $item.getAttribute(CHECK_SIZE_ID_ATTRIBUTE);\n    const $adsBlock = $item.parentElement\n      .closest(\"li\")\n      .querySelector(\n        !sizeId ? \".ads_container\" : `.ads_container[${SIZE_ID_ATTRIBUTE}=\"${sizeId}\"]`,\n      );\n    const empty = $adsBlock.clientHeight === 0;\n    $item.setAttribute(CHECK_SIZE_ATTRIBUTE, empty ? \"empty\" : \"full\");\n    if (!empty) {\n      $item.parentElement.closest(\"ul\").classList.add(\"not-empty\");\n    }\n    const successText = $item.getAttribute(CHECK_SUCESS_ATTRIBUTE) || \"рекламный блок скрыт\";\n    const failureText = $item.getAttribute(CHECK_FAILURE_ATTRIBUTE) || \"рекламный блок показан\";\n    makeResult($item, empty, successText, failureText);\n  });\n};\n\nconst syncEvals = () => {\n  $checkEvals.forEach($item => {\n    const evalString = $item.getAttribute(CHECK_EVAL_ATTRIBUTE);\n    let result = true;\n    try {\n      result = eval(evalString);\n    } catch (e) {}\n    const additionalInfo = `(<span>проверка:</span> <code>${evalString})</code>`;\n    const successText = $item.getAttribute(CHECK_SUCESS_ATTRIBUTE) || \"не работает\";\n    const failureText = $item.getAttribute(CHECK_FAILURE_ATTRIBUTE) || \"работает\";\n    makeResult($item, result, successText, failureText, additionalInfo);\n  });\n};\n\nconst preloadLoadingStuff = () => {\n  const factory = ($items: Element[], attribute: string, loadingFunction: Function) => {\n    $items.forEach($item => {\n      const url = $item.getAttribute(LOADING_URL_ATTRIBUTE);\n      loadingFunction(url)\n        .then(() => $item.setAttribute(attribute, STATUS_LOADING_SUCCESS))\n        .catch(() => $item.setAttribute(attribute, STATUS_LOADING_FAILURE));\n    });\n  };\n\n  factory($checkScriptLoadings, CHECK_SCRIPT_LOADING_ATTRIBUTE, loadScript);\n  factory($checkImageLoadings, CHECK_IMAGE_LOADING_ATTRIBUTE, loadImage);\n};\n\nconst syncLoading = () => {\n  const factory = ($items: Element[], attribute: string) => {\n    $items.forEach($item => {\n      const url = $item.getAttribute(LOADING_URL_ATTRIBUTE);\n      const status = $item.getAttribute(attribute) || \"pending\";\n      const blocked = status !== STATUS_LOADING_SUCCESS;\n      const successText = $item.getAttribute(CHECK_SUCESS_ATTRIBUTE) || \"файл не загружен\";\n      const failureText = $item.getAttribute(CHECK_FAILURE_ATTRIBUTE) || \"файл загружен\";\n\n      makeResult(\n        $item,\n        blocked,\n        successText,\n        failureText,\n        `(<span>адрес:</span> <code>${url}</code>)`,\n      );\n    });\n  };\n  factory($checkScriptLoadings, CHECK_SCRIPT_LOADING_ATTRIBUTE);\n  factory($checkImageLoadings, CHECK_IMAGE_LOADING_ATTRIBUTE);\n};\n\nconst countSuccesResults = results => {\n  return results.reduce((acc: number, $result: Element) => {\n    const blockedAsNumber = $result.getAttribute(ITEMS_RESULS_ATTRIBUTE) === \"true\" ? 1 : 0;\n    return acc + blockedAsNumber;\n  }, 0);\n};\n\nconst syncFinalScore = () => {\n  const $allResults = getAllResults();\n  const successCount = countSuccesResults($allResults);\n  const allCount = $allResults.length;\n\n  $finalScoreSuccess.textContent = \"\" + successCount;\n  $finalScoreCount.textContent = \"\" + allCount;\n  $finalScorePercent.textContent =\n    (successCount == 0 ? 0 : Math.round((successCount / allCount) * 10000) / 100) + \"% \";\n};\n\nconst clearResults = () =>\n  getAllResults().forEach($el => $el.removeAttribute(ITEMS_RESULS_ATTRIBUTE));\n\nconst appCycle = (delay: number) => {\n  clearResults();\n  syncCheckSize();\n  syncEvals();\n  syncLoading();\n  syncFinalScore();\n\n  const newDelay = delay + delay * 0.5;\n  setTimeout(() => appCycle(newDelay), newDelay);\n};\n\npreloadLoadingStuff();\nappCycle(50);\n"]}